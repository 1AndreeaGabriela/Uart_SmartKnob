<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAARAgAAAJNU0Z0AUkBTAIBAQMB
        AAFQAQcBUAEHARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARBu
        AAMCAQMDAgEDNAADUgGgA1wB2QNcAdkDUgGgXAAEAQM4AV0DRAF6A0QBegNEAXoDOgFhBAIEAQM4AVwD
        RAF6A0QBegNEAXoDOgFhAwIBAxQAAwoBDQNGAX0DXwHVA14B7QNeAe0DXAHWA0YBfQMKAQ0YAAMGAQgD
        MwFQAxUBHAMUARsDWgHECAADWwHFAxIBGAMsAUMDKgE/UAADNgFXA1sBxQNCAXQDQgF0A0IBdANaAb8D
        OgFhAzUBVgNZAcYDQgF0A0IBdANCAXQDWQG+AzsBYwgAAxgBIAQAAx0BKQNgAdsDSwGPAxkBIwgAAxkB
        IwNMAY4DYAHbAx0BKQQAAxgBIAgAAwkBDANZAcADTgGVA18B1QNbAdMDOgFhCAADPgFrA1sB3gNWAbMD
        WQG+A0ABcEwAA0ABcQNGAX4MAANBAXMDRQF8A0ABcANGAX8MAANBAXIDRgF9BAADBgEIA1YBtQMQARUD
        XgHdAzABSxgAAzABSwNeAd0DEAEVA1UBtAMGAQgEAANKAYsDQAFwBAADBgEIAw4BEhAAAwUBBgQAAwYB
        CANZAb4DKQE+SAADQAFxA0YBfgwAA0EBcwNFAXwDQAFwA0YBfwwAA0EBcgNGAX0MAANKAYsDRwGDIAAD
        RwGDA0oBiwwAA0wBjgM9AWkoAANWAbUDKwFCSAADQAFxA0YBfgwAA0EBcwNFAXwDQAFwA0YBfwwAA0EB
        cgNGAX0IAAQBA18B5QMPARQgAAMPARQDXwHlBAEIAAMbASYDYAHjCAADAgEDA0cBgwNeAdcDXgHXA0cB
        gwMCAQMEAAMGAQcDXgHdAxIBGEgAAzQBVANdAckDRQF8A0UBfANFAXwDWQHDAzkBXwM0AVMDWwHKA0UB
        fANFAXwDRQF8A1kBwwM6AWAEAAM6AWEDEgEXA1wB2RAAAyABLgMgAS4QAANfAdoDEgEXAzoBYQNRAZ4D
        WQHGA0IBdQgAA0cBgwNMAZADBQEGAwUBBgNMAZADRwGDCAADPwFsA1kBxgNRAZ5EAAQBAzUBVQNBAXID
        QQFyA0EBcgM2AVkEAQQAAzQBVANBAXIDQQFyA0EBcgM2AVkEAgQAA0YBfwMTARoDXAHWDAADIAEuA2IB
        4QMrAUIQAANcAdYDEwEaA0YBfwNcAdkQAANcAdYDBQEGCAADBQEGA1wB1hAAA1wB2UQABAEDOAFbA0QB
        eQNEAXkDRAF5AzkBXwQCBAEDOAFbA0QBeQNEAXkDRAF5AzoBYAQCCAAEAgNaAekDCgENBAADIAEuA2IB
        4QMsAUMQAAMKAQ0DWgHpBAIEAANcAdkQAANeAdcDBQEGCAADBQEGA14B1xAAA1wB2UQAAzUBVgNZAcYD
        QwF2A0MBdgNDAXYDWQHAAzoBYQM1AVUDWQHGA0MBdgNDAXYDQwF2A1oBvwM6AWIMAANQAZoDQAFxBAAD
        VQGuAywBQxQAA0ABcQNQAZoIAANRAZ4DWQHGAz4BawgAA0cBggNMAZADBQEGAwUBBgNMAZADRwGCCAAD
        OgFiA1sBxQNRAZ5EAANAAXEDRgF+DAADQQFzA0UBfANAAXADRgF/DAADQQFyA0YBfQQAAwYBCANOAZgD
        FwEfA14B4gMkATQEARQAAyQBNANeAeIDFwEfA04BmAMGAQgEAAMTARkDXgHdAwYBBwQAAwIBAwNHAYMD
        XgHXA14B1wNHAYMDAgEDBAADDwETA14B0gMUARtIAANAAXEDRgF+DAADQQFzA0UBfANAAXADRgF/DAAD
        QQFyA0YBfQgAAygBPAQBAygBPANeAeIDQAFvAwkBCwgAAwkBCwM/AW4DXgHiAygBPAQBAygBPAgAAzgB
        WwNVAa4kAAMHAQkDXAHWAxQBG0gAA0ABcQNGAX4MAANBAXMDRQF8A0ABcANGAX8MAANBAXIDRgF9FAAD
        FwEfA1ABnQNdAeoDWwHQA1sB0ANdAeoDUAGdAxcBHxQAA08BmQMuAUcIAAMFAQYcAANOAZYDMgFPSAAD
        NQFVA1wByANEAXsDRAF7A0QBewNZAcMDOQFfAzQBUwNdAckDRAF7A0QBewNEAXsDVwHCAzoBYRAAAyAB
        LQNTAaYEAAMDAQQDGAEhAxgBIQMDAQQEAANRAZ4DJAE1EAADIwEyA1sB0wMtAUYDVQGsA1sB3gM+AWsI
        AANCAXQDXgHiAz0BZwNAAW8DWQHAAwYBCEgABAEDNQFWA0IBdANCAXQDQgF0AzcBWgQCBAEDNQFWA0IB
        dANCAXQDQgF0AzgBWwQCFAADCQELCAADPwFtAz8BbQgAAwkBDBgAAyMBMwNQAZoDOAFdAxIBGANbAcUI
        AANZAcYDGwEmA0wBkANLAYwDCQEMpAADAwEEAwMBBDQAA1IBoANcAdkDXAHZA1IBoFgAAUIBTQE+BwAB
        PgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAL/Af4BfwH8AT8CAAGAAQEB8AEPAcEBhwIAAYAB
        AQGhAYUBgQGDAgABnAE5AQcB4AGTAdECAAGcATkBzwHzAZ8B+QIAAZwBOQGPAfEBmAERAgABgAEBAR4B
        eAIYAgABgAGBARwBeAF5AZ4CAAGAAQEBiAHxAXkBngIAAYABAQHJAfMCGAIAAZwBOQEDAeABiAERAgAB
        nAE5AoEBnwHxAgABnAE5AfABDwGbAfkCAAGAAQEB5AEnAoECAAGAAQEB9gFvAcEBgwIAAv8B/gF/AfwB
        PwIACw==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>52</value>
  </metadata>
</root>